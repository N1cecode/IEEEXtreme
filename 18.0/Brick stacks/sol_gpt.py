'''
From https://kaiser-yang.github.io/blog/2024/ieeextreme-18-solution/#brick-stacks
Generated by OpenAI Chatgpt-o1preview in 2024-11-06
使用贪心算法结合优先队列实现
'''
import sys
import threading
import heapq

def main():
    def solve():
        import sys
        sys.setrecursionlimit(1 << 25)
        N, x = map(int, sys.stdin.readline().split())
        A = list(map(int, sys.stdin.readline().split()))
        A.sort()
        
        ans = 1
        pile = []
        pile.append([A[0]])
        
        # 使用heapq实现最小堆，元素为 (堆顶砖块长度, 堆的索引)
        heap = []
        heapq.heappush(heap, (A[0], ans - 1))
        
        for i in range(1, N):
            min_val, idx = heap[0]  # 获取堆顶元素（堆顶砖块长度最小的堆）
            if min_val + x <= A[i]:
                # 可以将当前砖块放入该堆
                heapq.heappop(heap)
                heapq.heappush(heap, (A[i], idx))
                pile[idx].append(A[i])
            else:
                # 需要创建新的堆
                ans += 1
                idx = ans - 1
                heapq.heappush(heap, (A[i], idx))
                pile.append([A[i]])
        
        print(ans)
        for p in pile:
            p.reverse()  # 从大到小输出
            print(len(p), ' '.join(map(str, p)))
    
    threading.Thread(target=solve).start()

if __name__ == "__main__":
    main()
